[gd_scene load_steps=28 format=2]

[ext_resource path="res://maps/forest/forest.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/main.gd" type="Script" id=2]
[ext_resource path="res://textures/vfx/blood_vessels.png" type="Texture" id=3]
[ext_resource path="res://textures/vfx/ss_radial_inverted.png" type="Texture" id=4]

[sub_resource type="World" id=1]

[sub_resource type="ViewportTexture" id=2]
viewport_path = NodePath("Viewport")

[sub_resource type="VisualShaderNodeScalarUniform" id=3]
uniform_name = "damage_percentage"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "pulse_amount"

[sub_resource type="VisualShaderNodeScalarOp" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=9]
uniform_name = "pulse_frequency"

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 1.2 ]

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "texture"

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=13]
source = 2
texture_type = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=15]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 1.5 ]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=17]
output_port_for_preview = 0
uniform_name = "color_multiply"

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeVectorOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShader" id=22]
code = "shader_type canvas_item;
render_mode blend_add;

uniform vec4 color_multiply : hint_color;
uniform sampler2D tex_frg_6;
uniform float pulse_frequency;
uniform float pulse_amount;
uniform float damage_percentage;



void vertex() {
// Output:0

}

void fragment() {
// Input:2

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// ColorUniform:4
	vec3 n_out4p0 = color_multiply.rgb;
	float n_out4p1 = color_multiply.a;

// VectorOp:5
	vec3 n_out5p0 = n_out3p0 * n_out4p0;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Input:12
	float n_out12p0 = TIME;

// ScalarUniform:18
	float n_out18p0 = pulse_frequency;

// ScalarOp:22
	float n_out22p0 = n_out12p0 * n_out18p0;

// ScalarFunc:31
	float n_out31p0 = sin(n_out22p0);

// ScalarOp:19
	float n_in19p1 = 1.20000;
	float n_out19p0 = n_out31p0 + n_in19p1;

// ScalarOp:32
	float n_in32p1 = 1.50000;
	float n_out32p0 = n_out19p0 * n_in32p1;

// ScalarFunc:30
	float n_out30p0 = sin(n_out32p0);

// ScalarUniform:15
	float n_out15p0 = pulse_amount;

// ScalarOp:14
	float n_out14p0 = n_out30p0 * n_out15p0;

// ScalarUniform:10
	float n_out10p0 = damage_percentage;

// ScalarOp:17
	float n_out17p0 = n_out14p0 * n_out10p0;

// ScalarOp:16
	float n_out16p0 = n_out17p0 + n_out10p0;

// VectorOp:8
	vec3 n_out8p0 = n_out6p0 * vec3(n_out16p0);

// VectorOp:7
	vec3 n_out7p0 = n_out5p0 * n_out8p0;

// Output:0
	COLOR.rgb = n_out7p0;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -1270.3, 205.782 )
mode = 1
modes/blend = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 820, 140 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -160, 140 )
nodes/fragment/3/node = SubResource( 13 )
nodes/fragment/3/position = Vector2( 40, 140 )
nodes/fragment/4/node = SubResource( 17 )
nodes/fragment/4/position = Vector2( 60, 300 )
nodes/fragment/5/node = SubResource( 18 )
nodes/fragment/5/position = Vector2( 320, 160 )
nodes/fragment/6/node = SubResource( 19 )
nodes/fragment/6/position = Vector2( 40, 540 )
nodes/fragment/7/node = SubResource( 20 )
nodes/fragment/7/position = Vector2( 560, 280 )
nodes/fragment/8/node = SubResource( 21 )
nodes/fragment/8/position = Vector2( 280, 760 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( -400, 920 )
nodes/fragment/12/node = SubResource( 4 )
nodes/fragment/12/position = Vector2( -1800, 500 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -480, 600 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -740, 820 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -180, 840 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -320, 740 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( -1780, 640 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( -1100, 640 )
nodes/fragment/22/node = SubResource( 12 )
nodes/fragment/22/position = Vector2( -1520, 520 )
nodes/fragment/30/node = SubResource( 14 )
nodes/fragment/30/position = Vector2( -740, 560 )
nodes/fragment/31/node = SubResource( 15 )
nodes/fragment/31/position = Vector2( -1280, 520 )
nodes/fragment/32/node = SubResource( 16 )
nodes/fragment/32/position = Vector2( -920, 440 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 2, 3, 0, 5, 0, 4, 0, 5, 1, 5, 0, 7, 0, 6, 0, 8, 0, 8, 0, 7, 1, 15, 0, 14, 1, 10, 0, 16, 1, 14, 0, 17, 0, 10, 0, 17, 1, 17, 0, 16, 0, 16, 0, 8, 1, 31, 0, 19, 0, 30, 0, 14, 0, 12, 0, 22, 0, 18, 0, 22, 1, 22, 0, 31, 0, 19, 0, 32, 0, 32, 0, 30, 0, 7, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 22 )
shader_param/color_multiply = Color( 1, 0, 0, 1 )
shader_param/pulse_frequency = 4.0
shader_param/pulse_amount = 0.8
shader_param/damage_percentage = 0.0

[node name="main" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}
active_scene = NodePath("Viewport/forest_map")

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 640, 480 )
own_world = true
world = SubResource( 1 )
render_target_v_flip = true
audio_listener_enable_3d = true
physics_object_picking = true

[node name="forest_map" parent="Viewport" instance=ExtResource( 1 )]

[node name="LoRezRender" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 2 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BloodOverlay" type="TextureRect" parent="."]
material = SubResource( 23 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 3 )
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}
